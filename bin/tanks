#!/usr/bin/env python3

import pygame, math, ecs
from pygame.locals import *

from pytanks.systems import *
from pytanks.util import make_color_surface
from pytanks import make

def main (fps, w, h):

    pygame.init ()

    surface = pygame.display.set_mode ( (w, h) )
    clock   = pygame.time.Clock ()

    entity_manager = ecs.managers.EntityManager ()
    system_manager = ecs.managers.SystemManager (entity_manager)

    system_manager.add_system (MovementSystem (w, h))
    system_manager.add_system (RenderSystem (surface))
    system_manager.add_system (HealthSystem ())
    system_manager.add_system (HealthRenderSystem (surface))
    system_manager.add_system (WeaponSystem ())
    system_manager.add_system (MountSystem ())
    system_manager.add_system (ExampleTurretSystem ())
    system_manager.add_system (CollisionSystem ())
    system_manager.add_system (DebugSystem ())

    make.example_barrier (entity_manager, 100, (w / 4, 20), (w / 2, 100))
    for i in range (3):
        make.example_barrier (entity_manager, 10, (20, 20), (50 + i * (w - 100)/2, 50))

    make.example_turret (entity_manager, (w * .9, h * .9))
    make.example_turret (entity_manager, (w * .1, h * .9))

    dummy_bullet_props = (2, 10, 4, make_color_surface ( (5, 5), (255, 255, 0) ), (5, 5))

    """
    joy = pygame.joystick.Joystick (0)
    joy.init ()
    things.append (JoystickTank (joy, (0, h / 2)))
    """

    frames = 0

    while 1:

        if frames % 50 == 0:
            for i in range (6):
                make.bullet (entity_manager, dummy_bullet_props, (w / 2 - 18 + 6 * i, h * .9), (-2/3 + i/15) * math.pi)

        for e in pygame.event.get ():
            if e.type == QUIT: return

        system_manager.update (1 / fps)
        pygame.display.update ()
        clock.tick (fps)
        frames += 1

if __name__ == "__main__":
    main (30, 640, 340)
